/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'

    id 'maven-publish'
    id "io.freefair.lombok" version "5.1.0"
    id 'com.github.johnrengelman.shadow' version '6.0.0'
//    kotlin("jvm") version '1.3.61'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
//    id "org.jetbrains.kotlin.kapt" version "1.3.72"
}
apply plugin: 'idea'


repositories {
    mavenLocal()
    maven { url = "https://repo.aikar.co/content/groups/aikar/" }
    maven {
        url = 'https://oss.sonatype.org/content/repositories/snapshots'
    }

    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }

    maven {
        url = 'https://repo.md-5.net/content/repositories/snapshots/'
    }

    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }

    maven {
        url = 'https://nexus.hc.to/content/repositories/pub_releases'
    }

    maven { url 'https://jitpack.io' }

    maven {
        url = 'https://repo.maven.apache.org/maven2'
    }


    maven {
        name = "upstream"
        url = "https://ci.nametagedit.com/plugin/repository/everything/"
    }

    maven {
        url = "https://repo.md-5.net/content/repositories/releases/"
    }
    maven {
        name = "ess-repo"
        url = "https://ci.ender.zone/plugin/repository/everything/"
    }

    maven {
        name 'velocity'
        url 'https://repo.velocitypowered.com/snapshots/'
    }

    flatDir {
        dirs 'Dependencies'
    }
    mavenCentral()

    maven { url = "https://maven.enginehub.org/repo/" }

}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

configurations {
    system
    compileOnly.extendsFrom system
}

dependencies {
    compile 'com.github.Fernthedev.FernAPI:all:c9262f7' //1.9.0-rc4'
//    compileOnly 'com.google.apis:google-api-services-youtube:v3-rev193-1.23.0'
//    compile 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
//    compile 'com.google.api-client:google-api-client:1.23.0'

    compileOnly 'com.github.Fernthedev.preferences_api:api:0.1.0'
    compile 'com.github.Fernthedev:FernUtils:1.3.3'
    compile 'org.mariadb.jdbc:mariadb-java-client:2.7.1'
    compileOnly 'net.md-5:bungeecord-api:1.16-R0.4-SNAPSHOT'
    compileOnly 'org.spigotmc:spigot-api:1.14.4-R0.1-SNAPSHOT'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    compileOnly 'org.bukkit:bukkit:1.13.1-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.9.2'
    compileOnly 'net.milkbowl.vault:VaultAPI:1.7'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.4-SNAPSHOT'
    compileOnly 'com.velocitypowered:velocity-api:1.1.0-SNAPSHOT'
    annotationProcessor 'com.velocitypowered:velocity-api:1.1.0-SNAPSHOT'
//    compileOnly 'com.velocitypowered:velocity-api:1.0.0-SNAPSHOT'
//    compileOnly name: 'EssentialsX', group: 'net.ess3', version: '2.17.2'
    system name: 'AdvancedBan-2.2.1-RELEASE'
//    compile 'me.leoko.advancedban:AdvancedBan:2.1.6'
    compileOnly 'com.nametagedit:nametagedit:4.1.0'
    compileOnly 'fr.neatmonster:nocheatplus:3.16.1-SNAPSHOT'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
//    kapt "org.projectlombok:lombok:1.18.12"
}

group = 'com.github.Fernthedev'
version = '1.2'
archivesBaseName = "FCommands"
sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}
compileJava.options.encoding = 'UTF-8'

jar.classifier("old")
shadowJar {
    classifier = ''
    minimize {
        exclude (dependency('org.mariadb.jdbc:.*:.*') )
    }
    mergeServiceFiles()

//    include('org.mariadb.jdbc')

//    dependencies {
//
//    }
    relocate 'com.zaxxer', 'ferncommands.com.zaxxer'
    relocate 'co.aikar.commands', "${project.group}.acf"
    relocate 'co.aikar.locales', "${project.group}.locales"

    relocate 'com.github.fernthedev.fernapi', 'fcommands.com.github.fernthedev.fernapi'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


//task alljavadoc(type: Javadoc) {
//    source subprojects.collect { it.sourceSets.main.allJava }
//    classpath = files(subprojects.collect { it.sourceSets.main.compileClasspath })
//    destinationDir = file("${buildDir}/docs/javadoc")
//}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.java
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            groupId = this.group;
            artifactId = this.archivesBaseName
            version = this.version

            artifact sourcesJar {
                classifier "sources"
            }

            artifact javadocJar {
                classifier "javadoc"
            }
        }
    }
}

java {
//        withJavadocJar()
    withSourcesJar()
}

javadoc {
    failOnError = false
}

jar.dependsOn(shadowJar)

shadowJar.finalizedBy javadocJar
shadowJar.finalizedBy sourcesJar

build.dependsOn sourcesJar

processResources {
//        from 'resources'

    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'
        include 'bungee.yml'
        include 'velocity-plugin.json'

        expand 'version':project.version
    }

}
compileJava {
    options.compilerArgs += ["-parameters"]
    options.fork = true
    options.forkOptions.executable = 'javac'
}
compileKotlin {
    kotlinOptions.javaParameters = true
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}